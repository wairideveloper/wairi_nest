type Review{
    idx: Int!
    memberIdx: Int!
    itemIdx: Int!
    submitIdx: Int!
    rate: Int!
    image: String
    content: String
    content_a: String
    regdate: String
    regdate_a: String
    memberName: String
    images: [String]
    itemName: String
    name: String
    awsKey: String
    url: String
}

type Reviews implements Pagination {
    dataPerPage: Int
    totalPage: Int
    total: Int
    next: Int
    previous: Int
    currentPage: Int
    data: [Review!]!
}

type deleteReviewResponse{
    status: Int
    message: String
}

scalar Upload

extend type Query {
    getReviews(idx:Int! take: Int!,page:Int!): Reviews
    getReview(idx:Int!): Review
    getMyReviews(take: Int!,page:Int!): Reviews
}

extend type Mutation {
    createReview(files: [Upload],
        content: String!,
        campaignIdx: Int!,
        itemIdx: Int!,
        submitIdx: Int!,

        rate: Int!,
    ): GraphqlHttpResponse
    updateReview(idx:Int!,
        images: String!,
        files: [Upload],
        content: String!,
        campaignIdx: Int!,
        itemIdx: Int!,
        submitIdx: Int!,
        rate: Int!,
    ): GraphqlHttpResponse
    deleteReview(idx:Int!): deleteReviewResponse
    deleteImage: deleteReviewResponse
}
