type Review{
    idx: Int!
    memberIdx: Int!
    itemIdx: Int!
    submitIdx: Int!
    rate: Int!
    image: String
    content: String
    content_a: String
    regdate: String
    regdate_a: String
    memberName: String
    images: [String]
    itemName: String
    name: String
}

type Reviews implements Pagination {
    dataPerPage: Int
    totalPage: Int
    total: Int
    next: Int
    previous: Int
    currentPage: Int
    data: [Review!]!
}

type deleteReviewResponse{
    status: Int
    message: String
}

extend type Query {
    getReviews(idx:Int! take: Int!,page:Int!): Reviews
    getReview(idx:Int!): Review
}

extend type Mutation {
    createReview(file: [Upload],
        originalname: String,
        content: String,
        rate: Int
    ): String
    deleteReview(idx:Int!): deleteReviewResponse
    deleteImage: deleteReviewResponse
}
