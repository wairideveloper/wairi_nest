interface Pagination {
    dataPerPage: Int
    totalPage: Int
    total: Int
    next: Int
    previous: Int
    currentPage: Int
}

input ReceiverInput {
    templateCode: String
    phone: String
}

input FirebaseInput {
    token: String
    title: String
    body: String
}

type AlimtalkResponse {
    code: Int
    msg: String
}

type GraphqlHttpResponse {
    code: Int
    message: String
}

type SearchWord {
    idx: Int!
    name: String
    count: Int
    cateName: String
    cateAreaName: String
    image: String
}

type RecommendedSearchWordsResponse{
    searchWord: [SearchWord]
}

type FirebaseResponse {
    code: Int
    msg: String
    name: String
}

type Query{
    getRecommendedSearchWords(type:String, limit:Int): [SearchWord]!
}

type Mutation {
    sendAlimtalk(receiverInput:ReceiverInput!, templateCode:String): AlimtalkResponse
    firebaseTest(firebaseInput:FirebaseInput): FirebaseResponse
}
